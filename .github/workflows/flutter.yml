name: Build Flutter Android Release

on:
  push:
    branches: [ main ] # Adjust branch name if necessary (e.g., 'main')
  workflow_dispatch: # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 1: Set up Java (Version 11 matches the target in your updated build.gradle)
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # Or 'zulu', both are good choices
          java-version: '11' # Matches your app's compileOptions and kotlinOptions target
          cache: 'gradle' # Caches Gradle dependencies for faster builds

      # Step 2: Set up Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x' # Use a stable 3.x version, or specify exact version like '3.24.0'
          channel: 'stable'
          cache: true # Caches Flutter dependencies

      # Optional: Verify setup (useful for debugging)
      - name: Show versions (debug)
        run: |
          java -version
          flutter --version

      # Step 3: Get Flutter dependencies
      - name: Get Flutter dependencies
        run: flutter pub get

      # REMOVED: flutter analyze step to allow build to proceed despite linting issues

      # Optional: Run Flutter tests (if you have tests and want them run, can be removed if not needed)
      # - name: Run Flutter tests
      #   run: flutter test

      # Step 4: Build the release APK
      - name: Build release APK
        run: flutter build apk --release # --no-shrink # Add --no-shrink if you encounter issues related to minifyEnabled

      # Step 5: Upload the generated APK
      - name: Upload APK (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk # Path to the generated APK
