plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.mycompany.CounterApp"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    // Enable core library desugaring for Java 8+ API support (required by dependencies like flutter_local_notifications)
    compileOptions {
        coreLibraryDesugaringEnabled true
        // Change source and target compatibility to Java 11 to align with the CI environment and potentially resolve conflicts in dependencies
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    // Set the Kotlin JVM target to Java 11 to match the Java source/target compatibility
    kotlinOptions {
        jvmTarget = "11"
    }

    // Optional: Enable multidex (often recommended when using desugaring or large apps)
    defaultConfig {
        applicationId = "com.mycompany.CounterApp"
        minSdk = flutter.minSdkVersion // Ensure this is compatible with Java 11 features if desugaring is relied upon heavily (minSdk 24+ recommended for AGP 8.x desugaring features, but Flutter's default might be lower)
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        multiDexEnabled true
    }

    signingConfigs {
       release {
           // This block remains defined but is not used because the signingConfig line is removed from buildTypes.release
           keyAlias keystoreProperties['keyAlias']
           keyPassword keystoreProperties['keyPassword']
           storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
           storePassword keystoreProperties['storePassword']
       }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works (or unsigned APK for distribution).
            // signingConfig = signingConfigs.release // This line is commented out to bypass the missing keystore error
            minifyEnabled true // Enable code shrinking
            shrinkResources true // Enable resource shrinking (depends on minifyEnabled being true)
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro' // Include default ProGuard rules
        }
    }
}

flutter {
    source = "../.." // Points to the Flutter project root (the directory containing pubspec.yaml)
}

// Add the desugar library dependency with the version required by flutter_local_notifications
dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4' // Updated version
    // Other dependencies might be added here by Flutter tooling or manually
}
